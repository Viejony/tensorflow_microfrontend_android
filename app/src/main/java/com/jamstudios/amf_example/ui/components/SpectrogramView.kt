package com.jamstudios.amf_example.ui.components

import android.graphics.Bitmap
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.runtime.Composable
import androidx.compose.runtime.remember
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.FilterQuality
import androidx.compose.ui.graphics.asImageBitmap
import androidx.compose.ui.layout.ContentScale

@Composable
fun SpectrogramView(data: FloatArray, width: Int, height: Int) {
    val bitmap = remember(data, width, height) {
        makeViridisSpectrogram(data, width, height)
    }
    Image(
        bitmap = bitmap.asImageBitmap(),
        contentDescription = null,
        modifier = Modifier
            .fillMaxHeight(fraction = 0.8f)
            .fillMaxWidth(),
        contentScale = ContentScale.FillBounds,
        filterQuality = FilterQuality.None
    )
}

fun makeViridisSpectrogram(
    data: FloatArray,
    width: Int,
    height: Int,
    lut: IntArray = VIRIDIS_LUT
): Bitmap {
    require(data.size == width * height) { "Data size must be width Ã— height" }

    // Find min and max for normalization
    var min = Float.POSITIVE_INFINITY
    var max = Float.NEGATIVE_INFINITY
    for (v in data) {
        if (v < min) min = v
        if (v > max) max = v
    }
    val range = max - min

    // Create the Bitmap
    val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888)
    for (y in 0 until height) {
        for (x in 0 until width) {
            val value = data[y * width + x]
            val normalized = if (range > 0f) ((value - min) / range).coerceIn(0f, 1f) else 0f
            val index = (normalized * (lut.size - 1)).toInt().coerceIn(0, lut.size - 1)
            bitmap.setPixel(x, y, lut[index])
        }
    }

    return bitmap
}

private val VIRIDIS_LUT = intArrayOf(
    0xFF440154.toInt(),
    0xFF440255.toInt(),
    0xFF440357.toInt(),
    0xFF450558.toInt(),
    0xFF45065A.toInt(),
    0xFF45085B.toInt(),
    0xFF46095C.toInt(),
    0xFF460B5E.toInt(),
    0xFF460C5F.toInt(),
    0xFF460E61.toInt(),
    0xFF470F62.toInt(),
    0xFF471163.toInt(),
    0xFF471265.toInt(),
    0xFF471466.toInt(),
    0xFF471567.toInt(),
    0xFF471669.toInt(),
    0xFF47186A.toInt(),
    0xFF48196B.toInt(),
    0xFF481A6C.toInt(),
    0xFF481C6E.toInt(),
    0xFF481D6F.toInt(),
    0xFF481E70.toInt(),
    0xFF482071.toInt(),
    0xFF482172.toInt(),
    0xFF482273.toInt(),
    0xFF482374.toInt(),
    0xFF472575.toInt(),
    0xFF472676.toInt(),
    0xFF472777.toInt(),
    0xFF472878.toInt(),
    0xFF472A79.toInt(),
    0xFF472B7A.toInt(),
    0xFF472C7B.toInt(),
    0xFF462D7C.toInt(),
    0xFF462F7C.toInt(),
    0xFF46307D.toInt(),
    0xFF46317E.toInt(),
    0xFF45327F.toInt(),
    0xFF45347F.toInt(),
    0xFF453580.toInt(),
    0xFF453681.toInt(),
    0xFF443781.toInt(),
    0xFF443982.toInt(),
    0xFF433A83.toInt(),
    0xFF433B83.toInt(),
    0xFF433C84.toInt(),
    0xFF423D84.toInt(),
    0xFF423E85.toInt(),
    0xFF424085.toInt(),
    0xFF414186.toInt(),
    0xFF414286.toInt(),
    0xFF404387.toInt(),
    0xFF404487.toInt(),
    0xFF3F4587.toInt(),
    0xFF3F4788.toInt(),
    0xFF3E4888.toInt(),
    0xFF3E4989.toInt(),
    0xFF3D4A89.toInt(),
    0xFF3D4B89.toInt(),
    0xFF3D4C89.toInt(),
    0xFF3C4D8A.toInt(),
    0xFF3C4E8A.toInt(),
    0xFF3B508A.toInt(),
    0xFF3B518A.toInt(),
    0xFF3A528B.toInt(),
    0xFF3A538B.toInt(),
    0xFF39548B.toInt(),
    0xFF39558B.toInt(),
    0xFF38568B.toInt(),
    0xFF38578C.toInt(),
    0xFF37588C.toInt(),
    0xFF37598C.toInt(),
    0xFF365A8C.toInt(),
    0xFF365B8C.toInt(),
    0xFF355C8C.toInt(),
    0xFF355D8C.toInt(),
    0xFF345E8D.toInt(),
    0xFF345F8D.toInt(),
    0xFF33608D.toInt(),
    0xFF33618D.toInt(),
    0xFF32628D.toInt(),
    0xFF32638D.toInt(),
    0xFF31648D.toInt(),
    0xFF31658D.toInt(),
    0xFF31668D.toInt(),
    0xFF30678D.toInt(),
    0xFF30688D.toInt(),
    0xFF2F698D.toInt(),
    0xFF2F6A8D.toInt(),
    0xFF2E6B8E.toInt(),
    0xFF2E6C8E.toInt(),
    0xFF2E6D8E.toInt(),
    0xFF2D6E8E.toInt(),
    0xFF2D6F8E.toInt(),
    0xFF2C708E.toInt(),
    0xFF2C718E.toInt(),
    0xFF2C728E.toInt(),
    0xFF2B738E.toInt(),
    0xFF2B748E.toInt(),
    0xFF2A758E.toInt(),
    0xFF2A768E.toInt(),
    0xFF2A778E.toInt(),
    0xFF29788E.toInt(),
    0xFF29798E.toInt(),
    0xFF287A8E.toInt(),
    0xFF287A8E.toInt(),
    0xFF287B8E.toInt(),
    0xFF277C8E.toInt(),
    0xFF277D8E.toInt(),
    0xFF277E8E.toInt(),
    0xFF267F8E.toInt(),
    0xFF26808E.toInt(),
    0xFF26818E.toInt(),
    0xFF25828E.toInt(),
    0xFF25838D.toInt(),
    0xFF24848D.toInt(),
    0xFF24858D.toInt(),
    0xFF24868D.toInt(),
    0xFF23878D.toInt(),
    0xFF23888D.toInt(),
    0xFF23898D.toInt(),
    0xFF22898D.toInt(),
    0xFF228A8D.toInt(),
    0xFF228B8D.toInt(),
    0xFF218C8D.toInt(),
    0xFF218D8C.toInt(),
    0xFF218E8C.toInt(),
    0xFF208F8C.toInt(),
    0xFF20908C.toInt(),
    0xFF20918C.toInt(),
    0xFF1F928C.toInt(),
    0xFF1F938B.toInt(),
    0xFF1F948B.toInt(),
    0xFF1F958B.toInt(),
    0xFF1F968B.toInt(),
    0xFF1E978A.toInt(),
    0xFF1E988A.toInt(),
    0xFF1E998A.toInt(),
    0xFF1E998A.toInt(),
    0xFF1E9A89.toInt(),
    0xFF1E9B89.toInt(),
    0xFF1E9C89.toInt(),
    0xFF1E9D88.toInt(),
    0xFF1E9E88.toInt(),
    0xFF1E9F88.toInt(),
    0xFF1EA087.toInt(),
    0xFF1FA187.toInt(),
    0xFF1FA286.toInt(),
    0xFF1FA386.toInt(),
    0xFF20A485.toInt(),
    0xFF20A585.toInt(),
    0xFF21A685.toInt(),
    0xFF21A784.toInt(),
    0xFF22A784.toInt(),
    0xFF23A883.toInt(),
    0xFF23A982.toInt(),
    0xFF24AA82.toInt(),
    0xFF25AB81.toInt(),
    0xFF26AC81.toInt(),
    0xFF27AD80.toInt(),
    0xFF28AE7F.toInt(),
    0xFF29AF7F.toInt(),
    0xFF2AB07E.toInt(),
    0xFF2BB17D.toInt(),
    0xFF2CB17D.toInt(),
    0xFF2EB27C.toInt(),
    0xFF2FB37B.toInt(),
    0xFF30B47A.toInt(),
    0xFF32B57A.toInt(),
    0xFF33B679.toInt(),
    0xFF35B778.toInt(),
    0xFF36B877.toInt(),
    0xFF38B976.toInt(),
    0xFF39B976.toInt(),
    0xFF3BBA75.toInt(),
    0xFF3DBB74.toInt(),
    0xFF3EBC73.toInt(),
    0xFF40BD72.toInt(),
    0xFF42BE71.toInt(),
    0xFF44BE70.toInt(),
    0xFF45BF6F.toInt(),
    0xFF47C06E.toInt(),
    0xFF49C16D.toInt(),
    0xFF4BC26C.toInt(),
    0xFF4DC26B.toInt(),
    0xFF4FC369.toInt(),
    0xFF51C468.toInt(),
    0xFF53C567.toInt(),
    0xFF55C666.toInt(),
    0xFF57C665.toInt(),
    0xFF59C764.toInt(),
    0xFF5BC862.toInt(),
    0xFF5EC961.toInt(),
    0xFF60C960.toInt(),
    0xFF62CA5F.toInt(),
    0xFF64CB5D.toInt(),
    0xFF67CC5C.toInt(),
    0xFF69CC5B.toInt(),
    0xFF6BCD59.toInt(),
    0xFF6DCE58.toInt(),
    0xFF70CE56.toInt(),
    0xFF72CF55.toInt(),
    0xFF74D054.toInt(),
    0xFF77D052.toInt(),
    0xFF79D151.toInt(),
    0xFF7CD24F.toInt(),
    0xFF7ED24E.toInt(),
    0xFF81D34C.toInt(),
    0xFF83D34B.toInt(),
    0xFF86D449.toInt(),
    0xFF88D547.toInt(),
    0xFF8BD546.toInt(),
    0xFF8DD644.toInt(),
    0xFF90D643.toInt(),
    0xFF92D741.toInt(),
    0xFF95D73F.toInt(),
    0xFF97D83E.toInt(),
    0xFF9AD83C.toInt(),
    0xFF9DD93A.toInt(),
    0xFF9FD938.toInt(),
    0xFFA2DA37.toInt(),
    0xFFA5DA35.toInt(),
    0xFFA7DB33.toInt(),
    0xFFAADB32.toInt(),
    0xFFADDC30.toInt(),
    0xFFAFDC2E.toInt(),
    0xFFB2DD2C.toInt(),
    0xFFB5DD2B.toInt(),
    0xFFB7DD29.toInt(),
    0xFFBADE27.toInt(),
    0xFFBDDE26.toInt(),
    0xFFBFDF24.toInt(),
    0xFFC2DF22.toInt(),
    0xFFC5DF21.toInt(),
    0xFFC7E01F.toInt(),
    0xFFCAE01E.toInt(),
    0xFFCDE01D.toInt(),
    0xFFCFE11C.toInt(),
    0xFFD2E11B.toInt(),
    0xFFD4E11A.toInt(),
    0xFFD7E219.toInt(),
    0xFFDAE218.toInt(),
    0xFFDCE218.toInt(),
    0xFFDFE318.toInt(),
    0xFFE1E318.toInt(),
    0xFFE4E318.toInt(),
    0xFFE7E419.toInt(),
    0xFFE9E419.toInt(),
    0xFFECE41A.toInt(),
    0xFFEEE51B.toInt(),
    0xFFF1E51C.toInt(),
    0xFFF3E51E.toInt(),
    0xFFF6E61F.toInt(),
    0xFFF8E621.toInt(),
    0xFFFAE622.toInt(),
    0xFFFDE724.toInt(),
)